{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chetan/OneDrive/Desktop/typeface/frontend/src/app/page.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nexport default function Home() {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [files, setFiles] = useState<any[]>([]);\n\n  const handleFileUpload = async () => {\n    if (!selectedFile) return;\n\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n\n    try {\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      console.log(response.data);\n      fetchFiles();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n\n  const fetchFiles = async () => {\n    try {\n      const response = await axios.get('/api/list_files');\n      setFiles(response.data);\n    } catch (error) {\n      console.error('Error fetching files:', error);\n    }\n  };\n\n  React.useEffect(() => {\n    fetchFiles();\n  }, []);\n\n  return (\n    <div>\n      <h1>Dropbox-like File Manager</h1>\n      <input\n        type=\"file\"\n        onChange={(e) => setSelectedFile(e.target.files?.[0])}\n      />\n      <button onClick={handleFileUpload}>Upload</button>\n      <ul>\n        {files.map((file) => (\n          <li key={file.id}>\n            <a href={`/download/${file.filename}`} download>{file.filename}</a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAE5C,MAAM,mBAAmB;QACvB,IAAI,CAAC,cAAc;QAEnB,MAAM,WAAW,IAAI;QACrB,SAAS,MAAM,CAAC,QAAQ;QAExB,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,eAAe,UAAU;gBACzD,SAAS;oBACP,gBAAgB;gBAClB;YACF;YACA,QAAQ,GAAG,CAAC,SAAS,IAAI;YACzB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;QACzC;IACF;IAEA,MAAM,aAAa;QACjB,IAAI;YACF,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;YACjC,SAAS,SAAS,IAAI;QACxB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;QACzC;IACF;IAEA,qMAAA,CAAA,UAAK,CAAC,SAAS,CAAC;QACd;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBACC,MAAK;gBACL,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;;;;;;0BAEtD,8OAAC;gBAAO,SAAS;0BAAkB;;;;;;0BACnC,8OAAC;0BACE,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;kCACC,cAAA,8OAAC;4BAAE,MAAM,CAAC,UAAU,EAAE,KAAK,QAAQ,EAAE;4BAAE,QAAQ;sCAAE,KAAK,QAAQ;;;;;;uBADvD,KAAK,EAAE;;;;;;;;;;;;;;;;AAO1B"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}